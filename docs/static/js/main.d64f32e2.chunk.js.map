{"version":3,"sources":["components/ConsoleLine/ConsoleLine.tsx","components/ConsoleInput/ConsoleInput.tsx","components/Project/Project.tsx","assets/mathSocLogo.png","assets/mathSocLibArch.png","models/projects.tsx","models/directory.tsx","components/Console/Console.tsx","assets/me.jpg","components/Regular/Regular.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ConsoleLine","children","className","ConsoleInput","setUserInput","userInput","handlePressedEnter","currDir","handlePressedTab","autoComplete","id","autoFocus","type","onChange","event","target","value","onKeyDown","key","preventDefault","Project","logo","usedTech","projectLink","gitHubRepo","description","title","image","src","map","tech","href","undefined","mathsoclib","name","display","MathSocLogo","MathSocArch","bereavement","toTheMoon","Directory","parent","subdirectories","files","this","Console","useState","initialScreen","Date","toString","help","screen","setScreen","rootDir","projDir","hackathons","internships","initializeDir","setCurrDir","useEffect","element","document","getElementById","length","scrollIntoView","behavior","finalScreen","trim","subDir","file","split","requestedDirectory","prevDir","cand","find","dir","requestedFile","incompleteDir","includes","replace","incompleteFile","Regular","animation","goToConsole","animationPhase","setAnimationPhase","handlePressedGoToConsoleButton","setTimeout","doDisplayRest","setDoDisplayRest","removeEventListener","doDisplayPrompt","setDoDisplayPrompt","Me","options","autoStart","delay","cursor","onInit","typewriter","pauseFor","typeString","callFunction","start","addEventListener","onClick","project","App","setDisplayComponent","displayComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d64f32e2.chunk.js","sourcesContent":["import React from 'react';\nimport './ConsoleLine.css';\n\n\ninterface ConsoleLineProps {\n  children: any,\n  className?: any\n}\n\n\nfunction ConsoleLine({ children, className }: ConsoleLineProps) {\n  return (\n    <div className={`px-1 py-0.5 text-2xl text-console-white ${className}`}>\n\n      {children}\n\n\n    </div>\n  );\n}\n\nexport default ConsoleLine;\n","import React, { FormEvent, SyntheticEvent,  } from 'react';\nimport './ConsoleInput.css';\n\nfunction ConsoleInput({ setUserInput, userInput,  handlePressedEnter, currDir, handlePressedTab}: {setUserInput: any, handlePressedEnter:any, userInput:any, currDir: string, handlePressedTab:any}) {\n\n\n\n\n\n  const handleUserTyping = (event:SyntheticEvent ) => {\n    let target= event.target as HTMLInputElement;\n    \n  \n    setUserInput(target.value);\n    \n  }\n\n  const handleUserKeyDown = (event: any) => {\n    if(event.key === 'Enter'){\n      handlePressedEnter();\n    }else if (event.key === \"Tab\"){\n      event.preventDefault()\n      //auto complete\n      handlePressedTab();\n    }\n  }\n\n\n  return (\n    <div >\n      <p className=\"text-pink-500 text-2xl pl-1 py-0.5 bg-transparent inline\" >{\"/\" + currDir}&gt; </p>\n      <input autoComplete = \"off\" className=\"text-console-white text-2xl py-0.5 bg-transparent inline outline-none w-10/12 text-pink-500\" id = \"consoleInput\" autoFocus type=\"text\" onChange={handleUserTyping} onKeyDown={handleUserKeyDown} value={userInput}></input>\n    </div>\n  );\n}\n\nexport default ConsoleInput;\n","import ConsoleLine from \"../ConsoleLine/ConsoleLine\"\n\n\ninterface Project {\n\n  usedTech: any[],\n  description: any,\n  title: any,\n  image?: any,\n  logo?: any,\n  gitHubRepo?: any,\n  projectLink?: any,\n\n}\n\n\n\nfunction Project({ logo, usedTech, gitHubRepo, projectLink, description, title, image }: Project) {\n\n\n\n\n\n  return (\n    <div className=\"font-console text-center px-4 mt-4\">\n\n      <ConsoleLine className=\"mb-2\">\n        <div className=\"flex justify-center items-center\">\n          <img src={logo} className=\"w-16\"></img>\n          <h1 className=\"text-4xl text-red-400 p-2 \">{title}</h1>\n          <img src={logo} className=\"w-16\"></img>\n        </div>\n      </ConsoleLine>\n\n      <ConsoleLine className=\"flex flex-wrap justify-center items-center space-x-4 mb-2 \">\n        {usedTech.map((tech) => <p className=\"p-1 text-yellow-400\">{tech}</p>)}\n      </ConsoleLine>\n      <ConsoleLine className=\"mb-4 \"><p>{description}</p></ConsoleLine>\n\n      {projectLink ?\n        <ConsoleLine className=\"flex justify-center items-center space-x-4 mb-4\">\n          <button className=\"bg-gray-400 rounded-full p-2 mx-2 hover:bg-pink-600 hover:text-white cursor-pointer duration-300 text-black text-base\"><a href={projectLink}>Check it out</a></button>\n        </ConsoleLine>\n        : undefined}\n\n      {image ?\n        <ConsoleLine>\n          <div className=\"flex justify-center items-center\"><img src={image}></img></div>\n        </ConsoleLine>\n        : undefined}\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default Project;\n","export default __webpack_public_path__ + \"static/media/mathSocLogo.31172c65.png\";","export default __webpack_public_path__ + \"static/media/mathSocLibArch.c7d0c4dd.png\";","import { File } from \"./directory\";\nimport Project from \"../components/Project/Project\"\n\nimport MathSocLogo from '../assets/mathSocLogo.png';\nimport MathSocArch from '../assets/mathSocLibArch.png'\n\n\n\n\nlet mathsoclib: File = {\n  name: \"MathSocLibrary\",\n  display: <Project \n    title = \"Mathsoc Textbook Library\"\n    description = \"A fullstack textbook library and point of sale system designed and made for the University of Waterloo's Mathematics Society\"\n    usedTech = {[\"Angular\", \"Node.JS\", \"Express.JS\", \"MySQL\", \"Docker\", \"Linux\"]}\n    logo = {MathSocLogo}\n    image = {MathSocArch}\n    projectLink = \"https://library.mathsoc.uwaterloo.ca/\"\n  ></Project>\n}\n\nlet bereavement: File = {\n  name: \"BereavementDNN\",\n  display: <Project \n  title = \"Bereavement DotNetNuke Module\"\n  description = \"A fullstack employment bereavement DotNetNuke CMS module for the Toronto District School Board\"\n  usedTech = {[\"Angular\", \"ASP.NET\", \"DotNetNuke\", \"SQLServer\"]}\n></Project>\n}\n\nlet toTheMoon: File = {\n  name: \"ToTheMoon\",\n  display: <Project \n  title = \"🚀 To the Moon 🚀\"\n  description = \"A stock market sentiment analysis tool, powered by DropBase and r/wallstreetbets\"\n  usedTech = {[\"React\", \"Flask\", \"DropBase\", \"Docker\", \"AWS\", \"RedditAPI\"]}\n></Project>\n}\n\nexport {mathsoclib, bereavement, toTheMoon};","import {mathsoclib, bereavement, toTheMoon} from '../models/projects'\n\n\n\nexport interface File {\n  name: string;\n  display: any; //component\n}\n\n\n\n\nexport class Directory {\n\n  name: string;\n  parent?: Directory;\n  subdirectories?: Directory[];\n  files?: File[];\n\n  constructor(name: string, parent?: Directory, subdirectories?: Directory[], files?: File[]) {\n    this.name = name;\n    this.parent = parent;\n    this.subdirectories = subdirectories;\n    this.files = files;\n  }\n\n}\n\n\n\n\n\n\nexport function initializeDir() //returns rootDir\n{\n  let rootDir = new Directory(\n    \"\"\n  )\n\n \n\n  let projDir = new Directory(\n    \"projects\",\n    rootDir,\n    undefined,\n    [\n      mathsoclib,\n      bereavement,\n      toTheMoon\n    ]\n  )\n\n  let hackathons = new Directory(\n    \"hackathons\",\n    rootDir,\n  )\n\n  let internships = new Directory(\n    \"internships\",\n    rootDir,\n  )\n\n  rootDir.subdirectories = [\n    projDir,\n    hackathons,\n    internships\n  ]\n\n  return rootDir\n\n\n}\n\n","import React, { FC, ReactComponentElement, useEffect, useState } from 'react';\nimport './Console.css';\nimport ConsoleLine from '../../components/ConsoleLine/ConsoleLine'\nimport ConsoleInput from '../../components/ConsoleInput/ConsoleInput';\nimport { Directory, initializeDir, File } from '../../models/directory';\n\n\n\nfunction Console() {\n\n  let [userInput, setUserInput] = useState<String>();\n\n  const handleGoToRegularVersion = () => {\n    \n  }\n\n  const initialScreen = [\n    <ConsoleLine><div className=\"text-red-400\">💻 Welcome to ✨Bill Cui’s Website✨ LTS (GNU/Linux 4.19.104-microsoft-standard x86_64) 💻</div></ConsoleLine>,\n    <ConsoleLine className=\"mx-4 mt-5\"><div className=\"text-yellow-400 inline\">* Documentation:</div>  Bill’s Resume</ConsoleLine>,\n    <ConsoleLine className=\"mx-4\"><div className=\"text-yellow-400 inline\">* Management:</div>     https://github.com/billcui57</ConsoleLine>,\n    <ConsoleLine className=\"mx-4\"><div className=\"text-yellow-400 inline\">* Support:</div>        https://linkedin.com/in/billcui57</ConsoleLine>,\n    <ConsoleLine className=\"mx-4\"><div className=\"text-yellow-400 inline\">* Contact:</div>        billcui2001@hotmail.com</ConsoleLine>,\n    <ConsoleLine className=\"mx-4 mt-5\">System information as of <div className=\"text-green-400 inline\">{new Date().toString()}</div></ConsoleLine>,\n    <ConsoleLine className=\"mx-4\"><div className=\"text-yellow-400 inline\">Education Status: </div> University of Waterloo Computer Science 2B</ConsoleLine>,\n    <ConsoleLine className=\"mt-5\">This message is shown once a visit.</ConsoleLine>,\n    <ConsoleLine>Type <div className=\"text-green-400 inline\">help</div> for list of navigation commands</ConsoleLine>,\n    // <ConsoleLine>\n    //   <div className=\"text-red-400 inline\">Prefer the traditional portfolio style?</div>\n    //   <button className=\"bg-gray-400 rounded-full p-3 mx-2 hover:bg-red-400 hover:text-white cursor-pointer duration-300 ease-in-out text-base text-black \" onClick={handleGoToRegularVersion}>Click here!</button>\n    // </ConsoleLine>\n\n\n\n  ]\n\n\n  const help = [\n    <ConsoleLine className=\"mx-4\"><div className=\"text-green-400 inline\">* ls:</div> list navigation directory</ConsoleLine>,\n    <ConsoleLine className=\"mx-4\"><div className=\"text-green-400 inline\">* cd:</div> change navigation directory</ConsoleLine>,\n    <ConsoleLine className=\"mx-4\"><div className=\"text-green-400 inline\">* cat:</div> view a file in navigation directory</ConsoleLine>,\n    <ConsoleLine className=\"mx-4\"><div className=\"text-green-400 inline\">* clear:</div> clear terminal screen</ConsoleLine>,\n  ]\n\n  let [screen, setScreen] = useState<any[]>(initialScreen);\n\n\n  let [currDir, setCurrDir] = useState<Directory>(\n    () => initializeDir()\n  );\n\n\n\n  useEffect(() => {\n    const element = document.getElementById(`bottom${screen.length}`);\n    element?.scrollIntoView({ behavior: 'smooth' })\n  })\n\n\n  //autocompletee\n  const handlePressedTab = () => {\n    //empty command with only whitespaces\n    if (userInput?.length === 0 || !userInput?.trim()) {\n      //do nothing\n\n    } else if ((userInput.split(\" \")) && (userInput.split(\" \")[0] === \"cd\")) {\n      let incompleteDir = userInput.split(\" \")[1];\n\n      if (incompleteDir) {\n\n        let cand = currDir.subdirectories?.find((dir) => (dir.name.includes(incompleteDir)));\n        if (cand) {\n          setUserInput(userInput.replace(incompleteDir, cand.name));\n        }\n      }\n    } else if ((userInput.split(\" \")) && (userInput.split(\" \")[0] === \"cat\")) {\n      let incompleteFile = userInput.split(\" \")[1];\n\n      if (incompleteFile) {\n\n        let cand = currDir.files?.find((file) => (file.name.includes(incompleteFile)));\n        if (cand) {\n          setUserInput(userInput.replace(incompleteFile, cand.name));\n        }\n      }\n    }\n  }\n\n\n  const handlePressedEnter = () => {\n\n\n    let finalScreen: any[];\n\n    finalScreen = [...screen, <ConsoleLine ><div className=\"text-pink-500 inline\">{\"/\" + currDir.name}&gt;</div> {userInput}</ConsoleLine>];\n    setUserInput(\"\");\n\n\n    //empty command with only whitespaces\n    if (userInput?.length === 0 || !userInput?.trim()) {\n      //do nothing\n\n    }\n    //help\n    else if (userInput === \"help\") {\n      finalScreen =\n        [\n          ...finalScreen,\n          help\n        ]\n    }\n    //clear\n    else if (userInput === \"clear\") {\n      finalScreen = [];\n    }\n    //ls\n    else if (userInput === \"ls\") {\n      finalScreen =\n        [\n          ...finalScreen,\n          currDir.subdirectories?.map((subDir: Directory) => { return <ConsoleLine className=\"mr-4 inline-block \"><div className=\"text-green-400\">{\"/\" + subDir.name}</div></ConsoleLine> }),\n          currDir.files?.map((file: File) => { return <ConsoleLine className=\"mr-4 inline-block\"><div className=\"text-blue-400\">{file.name}</div></ConsoleLine> })\n        ]\n\n    }\n    //cd\n    else if ((userInput.split(\" \")) && (userInput.split(\" \")[0] === \"cd\")) {\n\n\n      if (userInput.split(\" \").length !== 2) {\n        finalScreen =\n          [\n            ...finalScreen,\n            <ConsoleLine ><div className=\"text-red-400 inline\">Too many arguments</div></ConsoleLine>,\n          ]\n      } else {\n        let requestedDirectory = userInput.split(\" \")[1];\n\n        //root\n        if (requestedDirectory === \"..\") {\n          let prevDir = currDir.parent;\n          if (prevDir) {\n            setCurrDir(prevDir);\n          } else {\n            finalScreen =\n              [\n                ...finalScreen,\n                <ConsoleLine ><div className=\"text-red-400 inline\">Root directory does not have a parent directory</div></ConsoleLine>,\n              ]\n          }\n        }\n        //elsewhere\n        else {\n          let cand = currDir.subdirectories?.find((dir) => ((dir.name === requestedDirectory) || ((\"/\" + dir.name) === requestedDirectory)));\n          if (cand) {\n            setCurrDir(cand)\n          } else {\n            finalScreen =\n              [\n                ...finalScreen,\n                <ConsoleLine ><div className=\"text-red-400 inline\">Directory name does not exist, type <div className=\"text-green-400 inline\">ls</div> for list of directories</div></ConsoleLine>,\n              ]\n          }\n        }\n      }\n\n\n    }\n    //cat \n    else if ((userInput.split(\" \")) && (userInput.split(\" \")[0] === \"cat\")) {\n\n      if (userInput.split(\" \").length !== 2) {\n        finalScreen =\n          [\n            ...finalScreen,\n            <ConsoleLine ><div className=\"text-red-400 inline\">Too many arguments</div></ConsoleLine>,\n          ]\n      } else {\n        let requestedFile = userInput.split(\" \")[1];\n        let cand = currDir.files?.find((file) => (file.name === requestedFile));\n        if (cand) {\n          finalScreen = [\n            ...finalScreen,\n            cand.display\n          ]\n        } else {\n          finalScreen =\n            [\n              ...finalScreen,\n              <ConsoleLine ><div className=\"text-red-400 inline\">File name does not exist, type <div className=\"text-green-400 inline\">ls</div> for list of files</div></ConsoleLine>,\n            ]\n        }\n      }\n\n\n\n    }\n    //invalid command\n    else {\n      finalScreen =\n        [\n          ...finalScreen,\n          <ConsoleLine ><div className=\"text-red-400 inline\">Invalid command, type <div className=\"text-green-400 inline\">help</div> for list of navigation commands</div></ConsoleLine>,\n        ]\n    }\n\n\n    finalScreen = [\n      ...finalScreen,\n      <div id={`bottom${finalScreen.length + 1}`} > </div>,\n    ]\n    setScreen(finalScreen);\n\n\n\n  }\n\n\n\n\n\n  return (\n    <div className=\"animate-fade-in-up\" >\n      {screen}\n      <ConsoleInput setUserInput={setUserInput} handlePressedEnter={handlePressedEnter} userInput={userInput} currDir={currDir.name} handlePressedTab={handlePressedTab} ></ConsoleInput>\n    </div>\n  );\n}\n\nexport default Console;\n","export default __webpack_public_path__ + \"static/media/me.c00d2cb6.jpg\";","import React, { FC, ReactComponentElement, useEffect, useState } from 'react';\nimport Me from '../../assets/me.jpg'\nimport Typewriter from 'typewriter-effect'\nimport { bereavement, mathsoclib, toTheMoon } from '../../models/projects';\nimport Project from '../Project/Project';\n\n\nfunction Regular({ goToConsole }: { goToConsole: any }) {\n\n\n  const [animationPhase, setAnimationPhase] = useState<String>(\"entering\")\n\n  const handlePressedGoToConsoleButton = () => {\n    setAnimationPhase(\"leaving\")\n    setTimeout(() => {\n      goToConsole()\n    }, 1000)\n  }\n\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setAnimationPhase(\"here\")\n  //   }, 1000)\n  // }, [])\n  const [doDisplayRest, setDoDisplayRest] = useState<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      document.removeEventListener(\"mousedown\", () => setDoDisplayRest(true));\n    }\n  }, [])\n\n  let animation:any;\n  if (animationPhase === \"entering\") {\n    animation = \"animate-fade-in-up\";\n  } else if (animationPhase === \"leaving\") {\n    animation = \"animate-fade-out\";\n  }else if (animationPhase === \"here\") {\n    animation = \"animate-fade-in-stay\";\n  }\n\n\n\n  const [doDisplayPrompt, setDoDisplayPrompt] = useState<boolean>(false)\n\n\n  const displayPrompt = () => {\n\n\n    document.addEventListener(\"mousedown\", () => {\n      setDoDisplayRest(true);\n      setDoDisplayPrompt(false);\n\n    })\n\n\n    return (\n      <div className={`animate-fade-in-stay`} >\n        <p className=\"animate-pulse \">Click anywhere</p>\n      </div>\n    )\n\n  }\n\n  useEffect(() => {\n    const element = document.getElementById(`rest`);\n    element?.scrollIntoView({ behavior: 'smooth' })\n  })\n\n\n  const displayRest = () => {\n    return (\n      <div  >\n\n       <div id=\"rest\" className = \"pb-16\"></div>\n        <button className=\"bg-gray-400 rounded-xl p-3 mx-2 hover:bg-gray-600 hover:text-console-white cursor-pointer duration-300 ease-in-out text-xl text-black \"  onClick={handlePressedGoToConsoleButton}>Familiar with Linux? Click here</button>\n     \n\n\n        <div className=\"mt-8\">\n          <h1 className=\"text-xl inline bg-gray-600 rounded-lg p-2\" >$ whoami</h1>\n        </div>\n\n\n\n        <h1 className=\"mt-8 text-xl mb-8\">I am a third year <h1 className=\"inline text-green-400\">Computer Science</h1> student at the <h1 className=\"inline text-yellow-400\">University of Waterloo</h1></h1>\n\n        <div className=\"mt-8\">\n          <h1 className=\"text-xl inline bg-gray-600 rounded-lg p-2\">$ ls ~/projects</h1>\n        </div>\n\n\n        {[mathsoclib,\n          bereavement,\n          toTheMoon].map((project) => project.display)}\n\n        <div className=\"mt-8\">\n          <h1 className=\"text-xl inline bg-gray-600 rounded-lg p-2 \">$ cat ~/.work_history</h1>\n        </div>\n\n\n        <h1 className=\"text-xl text-red-400 mt-8 \">WIP</h1>\n\n        <div className=\"mt-8\">\n          <h1 className=\"text-xl inline bg-gray-600 rounded-lg p-2 \">$ ls ~/hackathons</h1>\n        </div>\n\n        <h1 className=\"text-xl text-red-400 mt-8 \">WIP</h1>\n\n        <div className=\"mt-8\">\n          <h1 className=\"text-xl inline bg-gray-600 rounded-lg p-2 \">$ vim ~/.contact_me</h1>\n        </div>\n\n        <h1 className=\"text-xl text-red-400 mt-8 \">WIP</h1>\n\n\n      </div>\n    )\n  }\n\n\n\n\n\n  return (\n    <div className={`${animation}  px-4 text-console-white font-console mx-auto text-center`} >\n      <div className={``}>\n        <img src={Me} className={`w-1/3 rounded-full mx-auto mt-10 `}></img>\n        <div className=\"flex justify-center items-center mb-4 -space-x-3 text-4xl mt-4 \">\n          <Typewriter\n            options={{\n              autoStart: true,\n              delay: 50,\n              cursor: \"\"\n\n            }}\n\n            onInit={(typewriter) => {\n              typewriter\n                .pauseFor(1500)\n                .typeString(`Hi, I'm Bill Cui.`)\n                .callFunction(() => setDoDisplayPrompt(true))\n                .start();\n            }} />\n        </div>\n      </div>\n\n      {doDisplayPrompt ? displayPrompt() : undefined}\n      {doDisplayRest ? displayRest() : undefined}\n    </div>\n\n  );\n}\n\nexport default Regular;\n","import React, { FC, ReactComponentElement, useEffect, useState } from 'react';\nimport './App.css';\nimport Console from './components/Console/Console'\nimport Me from './assets/me.jpg'\nimport Typewriter from 'typewriter-effect'\nimport StartingScreen from './components/Regular/Regular';\n\n\nfunction App() {\n\n\n  const goToConsole = () => {\n    setDisplayComponent(<Console></Console>)\n  }\n\n  const [displayComponent, setDisplayComponent] = useState<any | undefined>(\n    <StartingScreen goToConsole={goToConsole}></StartingScreen>\n  )\n\n\n\n\n\n  return (\n    <div className=\"font-console\">\n\n\n\n      {displayComponent}\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode >\n   \n    <App />\n  \n    \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}